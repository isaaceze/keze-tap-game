{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/lib/gameContext.tsx"],"sourcesContent":["/**\n * Created: 2025-08-07 05:51:00 UTC\n * Updated: 2025-08-07 05:51:00 UTC\n * Purpose: Safe Telegram WebApp game context with comprehensive error boundaries\n * Features: 5-level referral fallback, async initialization, loading states\n */\n'use client';\n\nimport React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\n\ninterface Task {\n  id: string;\n  title: string;\n  description: string;\n  reward: number;\n  completed: boolean;\n  type: 'daily' | 'social' | 'achievement';\n  requirement?: number;\n  progress?: number;\n}\n\ninterface Referral {\n  id: string;\n  username: string;\n  earnings: number;\n  joinedAt: Date;\n}\n\ninterface BoostState {\n  tapPowerBoost: number;\n  energyBoost: number;\n  xpBoost: number;\n  levelBoost: number;\n  tapPowerBoostExpiry: number;\n  energyBoostExpiry: number;\n  xpBoostExpiry: number;\n  levelBoostExpiry: number;\n}\n\ninterface GameState {\n  coins: number;\n  tonCoins: number;\n  level: number;\n  experience: number;\n  experienceToNext: number;\n  tapsCount: number;\n  coinsPerTap: number;\n  energy: number;\n  maxEnergy: number;\n  tasks: Task[];\n  referrals: Referral[];\n  referralCode: string;\n  dailyStreak: number;\n  lastLoginDate: string;\n  totalEarnings: number;\n  userId?: number;\n  username?: string;\n  firstName?: string;\n  lastName?: string;\n  boosts: BoostState;\n  isInitialized: boolean;\n  telegramWebAppAvailable: boolean;\n}\n\ntype GameAction =\n  | { type: 'TAP' }\n  | { type: 'COMPLETE_TASK'; taskId: string }\n  | { type: 'ADD_REFERRAL'; referral: Referral }\n  | { type: 'LEVEL_UP' }\n  | { type: 'RESTORE_ENERGY' }\n  | { type: 'LOAD_GAME'; state: Partial<GameState> }\n  | { type: 'SPIN_WHEEL'; stake: number; result: { coins: number; tonCoins: number } }\n  | { type: 'TREASURE_HUNT'; stake: number; result: { coins: number; found: boolean } }\n  | { type: 'COIN_FLIP'; stake: number; result: { coins: number; won: boolean } }\n  | { type: 'INIT_TELEGRAM_USER'; userData: { userId: number; username?: string; firstName?: string; lastName?: string } }\n  | { type: 'ACTIVATE_BOOST'; boostType: 'tapPower' | 'energy' | 'xp' | 'level'; cost: number; duration: number }\n  | { type: 'CHECK_BOOST_EXPIRY' }\n  | { type: 'SET_INITIALIZED'; isInitialized: boolean; telegramWebAppAvailable: boolean };\n\n// Safe function to generate referral code\nconst generateSafeReferralCode = (): string => {\n  try {\n    return Math.random().toString(36).substring(2, 8).toUpperCase();\n  } catch (error) {\n    console.error('Error generating referral code:', error);\n    return 'DEMO123';\n  }\n};\n\nconst initialState: GameState = {\n  coins: 0,\n  tonCoins: 0,\n  level: 1,\n  experience: 0,\n  experienceToNext: 1000,\n  tapsCount: 0,\n  coinsPerTap: 1,\n  energy: 1000,\n  maxEnergy: 1000,\n  referralCode: generateSafeReferralCode(),\n  dailyStreak: 0,\n  lastLoginDate: '',\n  totalEarnings: 0,\n  isInitialized: true, // ✅ Start initialized for static export\n  telegramWebAppAvailable: false,\n  boosts: {\n    tapPowerBoost: 1,\n    energyBoost: 1,\n    xpBoost: 1,\n    levelBoost: 1,\n    tapPowerBoostExpiry: 0,\n    energyBoostExpiry: 0,\n    xpBoostExpiry: 0,\n    levelBoostExpiry: 0,\n  },\n  tasks: [\n    {\n      id: 'daily-tap-100',\n      title: 'Daily Tapper',\n      description: 'Tap 100 times today',\n      reward: 500,\n      completed: false,\n      type: 'daily',\n      requirement: 100,\n      progress: 0\n    },\n    {\n      id: 'daily-energy',\n      title: 'Energy Saver',\n      description: 'Use all your energy today',\n      reward: 300,\n      completed: false,\n      type: 'daily',\n      requirement: 1000,\n      progress: 0\n    },\n    {\n      id: 'social-follow',\n      title: 'Follow Us',\n      description: 'Follow our Telegram channel',\n      reward: 1000,\n      completed: false,\n      type: 'social'\n    },\n    {\n      id: 'achievement-level-5',\n      title: 'Level Up Champion',\n      description: 'Reach level 5',\n      reward: 2500,\n      completed: false,\n      type: 'achievement',\n      requirement: 5,\n      progress: 1\n    },\n    {\n      id: 'achievement-10k',\n      title: 'Coin Collector',\n      description: 'Earn 10,000 Keze coins',\n      reward: 5000,\n      completed: false,\n      type: 'achievement',\n      requirement: 10000,\n      progress: 0\n    }\n  ],\n  referrals: []\n};\n\nfunction gameReducer(state: GameState, action: GameAction): GameState {\n  try {\n    switch (action.type) {\n      case 'SET_INITIALIZED':\n        return {\n          ...state,\n          isInitialized: action.isInitialized,\n          telegramWebAppAvailable: action.telegramWebAppAvailable\n        };\n\n      case 'TAP':\n        if (state.energy <= 0) return state;\n\n        // Check for expired boosts\n        const now = Date.now();\n        const activeTapBoost = now < state.boosts.tapPowerBoostExpiry ? state.boosts.tapPowerBoost : 1;\n        const activeXpBoost = now < state.boosts.xpBoostExpiry ? state.boosts.xpBoost : 1;\n\n        const coinsEarned = Math.floor(state.coinsPerTap * activeTapBoost);\n        const xpEarned = Math.floor(1 * activeXpBoost);\n\n        const newCoins = state.coins + coinsEarned;\n        const newExperience = state.experience + xpEarned;\n        const newTapsCount = state.tapsCount + 1;\n        const newEnergy = Math.max(0, state.energy - 1);\n\n        // Update task progress safely\n        const updatedTasks = state.tasks.map(task => {\n          try {\n            if (task.id === 'daily-tap-100' && !task.completed) {\n              const newProgress = Math.min((task.progress || 0) + 1, task.requirement || 100);\n              return { ...task, progress: newProgress, completed: newProgress >= (task.requirement || 100) };\n            }\n            if (task.id === 'daily-energy' && !task.completed) {\n              const energyUsed = state.maxEnergy - newEnergy;\n              const newProgress = Math.min(energyUsed, task.requirement || 1000);\n              return { ...task, progress: newProgress, completed: newProgress >= (task.requirement || 1000) };\n            }\n            if (task.id === 'achievement-10k' && !task.completed) {\n              const newProgress = Math.min(newCoins, task.requirement || 10000);\n              return { ...task, progress: newProgress, completed: newProgress >= (task.requirement || 10000) };\n            }\n            return task;\n          } catch (error) {\n            console.error('Error updating task:', task.id, error);\n            return task;\n          }\n        });\n\n        return {\n          ...state,\n          coins: newCoins,\n          experience: newExperience,\n          tapsCount: newTapsCount,\n          energy: newEnergy,\n          totalEarnings: state.totalEarnings + coinsEarned,\n          tasks: updatedTasks\n        };\n\n      case 'COMPLETE_TASK':\n        try {\n          const task = state.tasks.find(t => t.id === action.taskId);\n          if (!task || task.completed) return state;\n\n          return {\n            ...state,\n            coins: state.coins + task.reward,\n            totalEarnings: state.totalEarnings + task.reward,\n            tasks: state.tasks.map(t =>\n              t.id === action.taskId ? { ...t, completed: true } : t\n            )\n          };\n        } catch (error) {\n          console.error('Error completing task:', error);\n          return state;\n        }\n\n      case 'ADD_REFERRAL':\n        try {\n          return {\n            ...state,\n            referrals: [...state.referrals, action.referral],\n            coins: state.coins + 1000,\n            totalEarnings: state.totalEarnings + 1000\n          };\n        } catch (error) {\n          console.error('Error adding referral:', error);\n          return state;\n        }\n\n      case 'LEVEL_UP':\n        try {\n          const newLevel = state.level + 1;\n          const newMaxEnergy = 1000 + (newLevel - 1) * 100;\n          const newCoinsPerTap = Math.floor(newLevel / 3) + 1;\n\n          return {\n            ...state,\n            level: newLevel,\n            experience: 0,\n            experienceToNext: newLevel * 1000,\n            coinsPerTap: newCoinsPerTap,\n            maxEnergy: newMaxEnergy,\n            energy: newMaxEnergy,\n            tasks: state.tasks.map(task => {\n              if (task.id === 'achievement-level-5' && !task.completed) {\n                return { ...task, progress: newLevel, completed: newLevel >= 5 };\n              }\n              return task;\n            })\n          };\n        } catch (error) {\n          console.error('Error leveling up:', error);\n          return state;\n        }\n\n      case 'RESTORE_ENERGY':\n        try {\n          return {\n            ...state,\n            energy: Math.min(state.energy + 50, state.maxEnergy)\n          };\n        } catch (error) {\n          console.error('Error restoring energy:', error);\n          return state;\n        }\n\n      case 'LOAD_GAME':\n        try {\n          return {\n            ...state,\n            ...action.state,\n            // Ensure critical fields are never undefined\n            referralCode: action.state.referralCode || state.referralCode || generateSafeReferralCode(),\n            userId: action.state.userId || state.userId,\n            isInitialized: true\n          };\n        } catch (error) {\n          console.error('Error loading game state:', error);\n          return {\n            ...state,\n            isInitialized: true\n          };\n        }\n\n      case 'SPIN_WHEEL':\n      case 'TREASURE_HUNT':\n      case 'COIN_FLIP':\n        try {\n          const coinDiff = action.result.coins - action.stake;\n          return {\n            ...state,\n            coins: state.coins + coinDiff,\n            tonCoins: state.tonCoins + (action.result.tonCoins || 0),\n            totalEarnings: state.totalEarnings + Math.max(0, coinDiff)\n          };\n        } catch (error) {\n          console.error('Error processing game result:', error);\n          return state;\n        }\n\n      case 'INIT_TELEGRAM_USER':\n        try {\n          return {\n            ...state,\n            userId: action.userData.userId,\n            username: action.userData.username,\n            firstName: action.userData.firstName,\n            lastName: action.userData.lastName,\n            referralCode: action.userData.userId?.toString() || state.referralCode\n          };\n        } catch (error) {\n          console.error('Error initializing Telegram user:', error);\n          return state;\n        }\n\n      case 'ACTIVATE_BOOST':\n        try {\n          if (state.coins < action.cost) return state;\n\n          const duration = action.duration;\n          const now = Date.now();\n          const expiryTime = now + duration;\n\n          let newBoosts = { ...state.boosts };\n\n          switch (action.boostType) {\n            case 'tapPower':\n              newBoosts.tapPowerBoost = 2;\n              newBoosts.tapPowerBoostExpiry = expiryTime;\n              break;\n            case 'energy':\n              newBoosts.energyBoost = 2;\n              newBoosts.energyBoostExpiry = expiryTime;\n              break;\n            case 'xp':\n              newBoosts.xpBoost = 2;\n              newBoosts.xpBoostExpiry = expiryTime;\n              break;\n            case 'level':\n              newBoosts.levelBoost = 2;\n              newBoosts.levelBoostExpiry = expiryTime;\n              break;\n          }\n\n          return {\n            ...state,\n            coins: state.coins - action.cost,\n            boosts: newBoosts\n          };\n        } catch (error) {\n          console.error('Error activating boost:', error);\n          return state;\n        }\n\n      case 'CHECK_BOOST_EXPIRY':\n        try {\n          const checkTime = Date.now();\n          const expiredBoosts = { ...state.boosts };\n\n          if (checkTime >= expiredBoosts.tapPowerBoostExpiry) {\n            expiredBoosts.tapPowerBoost = 1;\n          }\n          if (checkTime >= expiredBoosts.energyBoostExpiry) {\n            expiredBoosts.energyBoost = 1;\n          }\n          if (checkTime >= expiredBoosts.xpBoostExpiry) {\n            expiredBoosts.xpBoost = 1;\n          }\n          if (checkTime >= expiredBoosts.levelBoostExpiry) {\n            expiredBoosts.levelBoost = 1;\n          }\n\n          return {\n            ...state,\n            boosts: expiredBoosts\n          };\n        } catch (error) {\n          console.error('Error checking boost expiry:', error);\n          return state;\n        }\n\n      default:\n        return state;\n    }\n  } catch (error) {\n    console.error('Critical error in gameReducer:', error);\n    return state;\n  }\n}\n\nconst GameContext = createContext<{\n  state: GameState;\n  dispatch: React.Dispatch<GameAction>;\n} | null>(null);\n\n// Safe localStorage operations\nconst safeSaveToLocalStorage = (key: string, data: any): void => {\n  try {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem(key, JSON.stringify(data));\n    }\n  } catch (error) {\n    console.error('Failed to save to localStorage:', error);\n  }\n};\n\nconst safeLoadFromLocalStorage = (key: string): any => {\n  try {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      const saved = localStorage.getItem(key);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    }\n  } catch (error) {\n    console.error('Failed to load from localStorage:', error);\n  }\n  return null;\n};\n\n// Safe Telegram WebApp operations\nconst safeTelegramWebAppInit = async (dispatch: React.Dispatch<GameAction>): Promise<void> => {\n  try {\n    // Wait for DOM to be ready\n    await new Promise(resolve => {\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', resolve);\n      } else {\n        resolve(undefined);\n      }\n    });\n\n    // Check if Telegram WebApp is available\n    if (typeof window === 'undefined') {\n      console.log('Server-side rendering, skipping Telegram WebApp init');\n      dispatch({ type: 'SET_INITIALIZED', isInitialized: true, telegramWebAppAvailable: false });\n      return;\n    }\n\n    if (!(window as any).Telegram?.WebApp) {\n      console.log('Telegram WebApp not available, running in web mode');\n      dispatch({ type: 'SET_INITIALIZED', isInitialized: true, telegramWebAppAvailable: false });\n      return;\n    }\n\n    const tg = (window as any).Telegram.WebApp;\n    console.log('Telegram WebApp available, initializing...');\n\n    // Expand the WebApp to full height (safely)\n    try {\n      tg.expand();\n    } catch (error) {\n      console.warn('Could not expand Telegram WebApp:', error);\n    }\n\n    // Enable closing confirmation (safely)\n    try {\n      tg.enableClosingConfirmation();\n    } catch (error) {\n      console.warn('Could not enable closing confirmation:', error);\n    }\n\n    // Set main button (safely)\n    try {\n      if (tg.MainButton) {\n        tg.MainButton.setText('🎮 Share Game');\n        tg.MainButton.show();\n        tg.MainButton.onClick(() => {\n          try {\n            const shareText = encodeURIComponent('🪙 Join me in Keze Tap Game! Earn coins by tapping and playing games!');\n            const shareUrl = encodeURIComponent(window.location.href);\n            tg.openTelegramLink(`https://t.me/share/url?url=${shareUrl}&text=${shareText}`);\n          } catch (shareError) {\n            console.error('Error sharing game:', shareError);\n          }\n        });\n      }\n    } catch (error) {\n      console.warn('Could not set main button:', error);\n    }\n\n    // Get user data from Telegram (safely)\n    try {\n      const user = tg.initDataUnsafe?.user;\n      if (user) {\n        dispatch({\n          type: 'INIT_TELEGRAM_USER',\n          userData: {\n            userId: user.id,\n            username: user.username,\n            firstName: user.first_name,\n            lastName: user.last_name\n          }\n        });\n\n        // Try to sync with backend (safely)\n        try {\n          const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'https://keze.bissols.com/api';\n          const response = await fetch(`${apiUrl}/user/${user.id}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n\n          if (response.ok) {\n            const backendData = await response.json();\n            dispatch({ type: 'LOAD_GAME', state: backendData });\n          } else {\n            console.log('Backend response not ok:', response.status);\n          }\n        } catch (backendError) {\n          console.log('Backend not available, continuing in offline mode:', backendError);\n        }\n      } else {\n        console.log('No user data available from Telegram');\n      }\n    } catch (userError) {\n      console.warn('Error getting Telegram user data:', userError);\n    }\n\n    // Set theme colors (safely)\n    try {\n      if (tg.themeParams) {\n        document.documentElement.style.setProperty('--tg-theme-bg-color', tg.themeParams.bg_color || '#1a1a2e');\n        document.documentElement.style.setProperty('--tg-theme-text-color', tg.themeParams.text_color || '#ffffff');\n        document.documentElement.style.setProperty('--tg-theme-button-color', tg.themeParams.button_color || '#5288c1');\n      }\n    } catch (themeError) {\n      console.warn('Error setting theme colors:', themeError);\n    }\n\n    // Handle haptic feedback (safely)\n    try {\n      if (tg.HapticFeedback) {\n        (window as any).triggerHaptic = (type: 'light' | 'medium' | 'heavy') => {\n          try {\n            if (type === 'light') tg.HapticFeedback.impactOccurred('light');\n            if (type === 'medium') tg.HapticFeedback.impactOccurred('medium');\n            if (type === 'heavy') tg.HapticFeedback.impactOccurred('heavy');\n          } catch (hapticError) {\n            console.warn('Haptic feedback error:', hapticError);\n          }\n        };\n      }\n    } catch (hapticSetupError) {\n      console.warn('Error setting up haptic feedback:', hapticSetupError);\n    }\n\n    dispatch({ type: 'SET_INITIALIZED', isInitialized: true, telegramWebAppAvailable: true });\n    console.log('Telegram WebApp initialization completed successfully');\n\n  } catch (error) {\n    console.error('Error in Telegram WebApp initialization:', error);\n    dispatch({ type: 'SET_INITIALIZED', isInitialized: true, telegramWebAppAvailable: false });\n  }\n};\n\nexport function GameProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n\n  // Safe initialization effect\n  useEffect(() => {\n    const initializeGame = async () => {\n      try {\n        // Load saved game state first\n        const savedGame = safeLoadFromLocalStorage('telegram-tap-game');\n        if (savedGame) {\n          dispatch({ type: 'LOAD_GAME', state: savedGame });\n        }\n\n        // Initialize Telegram WebApp (non-blocking)\n        safeTelegramWebAppInit(dispatch).catch(error => {\n          console.error('Error during Telegram WebApp initialization:', error);\n          dispatch({ type: 'SET_INITIALIZED', isInitialized: true, telegramWebAppAvailable: false });\n        });\n      } catch (error) {\n        console.error('Error during game initialization:', error);\n        // App continues to work even if Telegram init fails\n      }\n    };\n\n    initializeGame();\n  }, []);\n\n  // Auto-save game state (safely)\n  useEffect(() => {\n    if (state.isInitialized) {\n      safeSaveToLocalStorage('telegram-tap-game', state);\n    }\n  }, [state, state.isInitialized]);\n\n  // Energy regeneration (safely)\n  useEffect(() => {\n    if (!state.isInitialized) return;\n\n    const interval = setInterval(() => {\n      try {\n        if (state.energy < state.maxEnergy) {\n          dispatch({ type: 'RESTORE_ENERGY' });\n        }\n      } catch (error) {\n        console.error('Error in energy regeneration:', error);\n      }\n    }, 60000); // Restore energy every minute\n\n    return () => clearInterval(interval);\n  }, [state.energy, state.maxEnergy, state.isInitialized]);\n\n  // Auto level up (safely)\n  useEffect(() => {\n    if (!state.isInitialized) return;\n\n    try {\n      if (state.experience >= state.experienceToNext) {\n        dispatch({ type: 'LEVEL_UP' });\n      }\n    } catch (error) {\n      console.error('Error in auto level up:', error);\n    }\n  }, [state.experience, state.experienceToNext, state.isInitialized]);\n\n  // Boost expiry check (safely)\n  useEffect(() => {\n    if (!state.isInitialized) return;\n\n    const interval = setInterval(() => {\n      try {\n        dispatch({ type: 'CHECK_BOOST_EXPIRY' });\n      } catch (error) {\n        console.error('Error checking boost expiry:', error);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [state.isInitialized]);\n\n  // Show brief loading only during hydration mismatch (removed blocking loading screen)\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      {children}\n    </GameContext.Provider>\n  );\n}\n\nexport function useGame() {\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,mMAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,mMAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,mMAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/TapScreen.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useGame } from '@/lib/gameContext';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { Coins, Zap, TrendingUp } from 'lucide-react';\n\ninterface FloatingCoin {\n  id: string;\n  x: number;\n  y: number;\n}\n\nexport function TapScreen() {\n  const { state, dispatch } = useGame();\n  const [floatingCoins, setFloatingCoins] = useState<FloatingCoin[]>([]);\n  const [isPressed, setIsPressed] = useState(false);\n\n  const processMultipleTaps = async (tapCount: number, positions: Array<{x: number, y: number}>) => {\n    if (state.energy < tapCount) return;\n\n    // Trigger haptic feedback\n    if ((window as any).triggerHaptic) {\n      (window as any).triggerHaptic(tapCount > 1 ? 'medium' : 'light');\n    }\n\n    // Try to sync with backend\n    if (state.userId) {\n      try {\n        const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'https://keze.bissols.com/api'}/tap`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ telegramId: state.userId, taps: tapCount })\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          dispatch({ type: 'LOAD_GAME', state: result });\n        } else {\n          // Fallback to local state\n          for (let i = 0; i < tapCount; i++) {\n            dispatch({ type: 'TAP' });\n          }\n        }\n      } catch (error) {\n        // Backend unavailable, use local state\n        for (let i = 0; i < tapCount; i++) {\n          dispatch({ type: 'TAP' });\n        }\n      }\n    } else {\n      // No user ID, use local state\n      for (let i = 0; i < tapCount; i++) {\n        dispatch({ type: 'TAP' });\n      }\n    }\n\n    // Add floating coin animations for each tap\n    positions.forEach((pos, index) => {\n      const newCoin: FloatingCoin = {\n        id: `${Math.random().toString(36)}-${index}`,\n        x: pos.x,\n        y: pos.y\n      };\n\n      setTimeout(() => {\n        setFloatingCoins(prev => [...prev, newCoin]);\n      }, index * 50); // Stagger animations slightly\n\n      // Remove floating coin after animation\n      setTimeout(() => {\n        setFloatingCoins(prev => prev.filter(coin => coin.id !== newCoin.id));\n      }, 1000 + (index * 50));\n    });\n  };\n\n  const handleTap = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (state.energy <= 0) return;\n\n    const rect = event.currentTarget.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    await processMultipleTaps(1, [{x, y}]);\n  };\n\n  const handleTouchStart = async (event: React.TouchEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (state.energy <= 0) return;\n\n    const rect = event.currentTarget.getBoundingClientRect();\n    const touches = Array.from(event.touches);\n    const tapCount = Math.min(touches.length, state.energy, 10); // Max 10 taps at once\n\n    const positions = touches.slice(0, tapCount).map(touch => ({\n      x: touch.clientX - rect.left,\n      y: touch.clientY - rect.top\n    }));\n\n    await processMultipleTaps(tapCount, positions);\n  };\n\n  const energyPercentage = (state.energy / state.maxEnergy) * 100;\n  const experiencePercentage = (state.experience / state.experienceToNext) * 100;\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-[calc(100vh-140px)] p-6 relative\">\n      {/* Experience Bar */}\n      <div className=\"w-full mb-6\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm text-purple-300\">Level {state.level}</span>\n          <span className=\"text-sm text-purple-300\">\n            {state.experience}/{state.experienceToNext} XP\n          </span>\n        </div>\n        <Progress value={experiencePercentage} className=\"h-2 bg-purple-900\" />\n      </div>\n\n      {/* Coins per tap */}\n      <div className=\"flex items-center gap-2 mb-8 bg-black/20 px-4 py-2 rounded-full\">\n        <TrendingUp className=\"w-4 h-4 text-green-400\" />\n        <span className=\"text-green-400 font-semibold\">+{state.coinsPerTap} KEZE per tap</span>\n      </div>\n\n      {/* Main Tap Button */}\n      <div className=\"relative mb-8\">\n        <Button\n          onClick={handleTap}\n          onTouchStart={handleTouchStart}\n          onMouseDown={() => setIsPressed(true)}\n          onMouseUp={() => setIsPressed(false)}\n          onMouseLeave={() => setIsPressed(false)}\n          onTouchEnd={() => setIsPressed(false)}\n          disabled={state.energy <= 0}\n          className={`\n            w-64 h-64 rounded-full bg-gradient-to-b from-yellow-400 to-orange-500\n            border-8 border-yellow-300 shadow-2xl transition-all duration-100\n            hover:scale-105 active:scale-95 disabled:opacity-50 disabled:scale-100\n            touch-manipulation select-none\n            ${isPressed ? 'scale-95' : ''}\n          `}\n        >\n          <div className=\"flex flex-col items-center\">\n            <Coins className=\"w-16 h-16 text-white mb-2\" />\n            <span className=\"text-white font-bold text-xl\">TAP!</span>\n          </div>\n        </Button>\n\n        {/* Floating coins */}\n        {floatingCoins.map(coin => (\n          <div\n            key={coin.id}\n            className=\"absolute pointer-events-none animate-bounce text-yellow-400 font-bold text-xl\"\n            style={{\n              left: coin.x,\n              top: coin.y,\n              animation: 'floatUp 1s ease-out forwards'\n            }}\n          >\n            +{state.coinsPerTap} KEZE\n          </div>\n        ))}\n      </div>\n\n      {/* Energy Bar */}\n      <div className=\"w-full max-w-sm\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <Zap className=\"w-4 h-4 text-blue-400\" />\n            <span className=\"text-sm text-blue-300\">Energy</span>\n          </div>\n          <span className=\"text-sm text-blue-300\">\n            {state.energy}/{state.maxEnergy}\n          </span>\n        </div>\n        <Progress\n          value={energyPercentage}\n          className={`h-3 ${state.energy <= 0 ? 'bg-red-900' : 'bg-blue-900'}`}\n        />\n        {state.energy <= 0 && (\n          <p className=\"text-center text-red-400 text-sm mt-2\">\n            Energy depleted! Wait for it to regenerate.\n          </p>\n        )}\n        {state.energy > 0 && state.energy < state.maxEnergy * 0.2 && (\n          <p className=\"text-center text-orange-400 text-sm mt-2\">\n            Low energy! Consider taking a break.\n          </p>\n        )}\n      </div>\n\n      {/* Stats */}\n      <div className=\"grid grid-cols-2 gap-4 mt-8 w-full max-w-sm\">\n        <div className=\"bg-black/20 p-3 rounded-lg text-center\">\n          <div className=\"text-2xl font-bold text-white\">{state.tapsCount.toLocaleString()}</div>\n          <div className=\"text-sm text-gray-300\">Total Taps</div>\n        </div>\n        <div className=\"bg-black/20 p-3 rounded-lg text-center\">\n          <div className=\"text-2xl font-bold text-yellow-400\">{state.totalEarnings.toLocaleString()}</div>\n          <div className=\"text-sm text-gray-300\">Total Earned</div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        @keyframes floatUp {\n          0% {\n            opacity: 1;\n            transform: translateY(0);\n          }\n          100% {\n            opacity: 0;\n            transform: translateY(-100px);\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1415, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,mMAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1464, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/TasksScreen.tsx"],"sourcesContent":["'use client';\n\nimport { useGame } from '@/lib/gameContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Coins, Clock, Users, Trophy, ExternalLink, CheckCircle } from 'lucide-react';\n\nexport function TasksScreen() {\n  const { state, dispatch } = useGame();\n\n  const handleCompleteTask = (taskId: string) => {\n    const task = state.tasks.find(t => t.id === taskId);\n    if (!task || task.completed) return;\n\n    if (task.type === 'social') {\n      // For social tasks, open external link (simulate)\n      window.open('https://t.me/your-channel', '_blank');\n      // In a real app, you'd verify completion through API\n      setTimeout(() => {\n        dispatch({ type: 'COMPLETE_TASK', taskId });\n      }, 2000);\n    } else {\n      dispatch({ type: 'COMPLETE_TASK', taskId });\n    }\n  };\n\n  const getTaskIcon = (type: string) => {\n    switch (type) {\n      case 'daily':\n        return <Clock className=\"w-5 h-5 text-blue-400\" />;\n      case 'social':\n        return <Users className=\"w-5 h-5 text-green-400\" />;\n      case 'achievement':\n        return <Trophy className=\"w-5 h-5 text-yellow-400\" />;\n      default:\n        return <Coins className=\"w-5 h-5 text-gray-400\" />;\n    }\n  };\n\n  const getTaskBadgeColor = (type: string) => {\n    switch (type) {\n      case 'daily':\n        return 'bg-blue-500';\n      case 'social':\n        return 'bg-green-500';\n      case 'achievement':\n        return 'bg-yellow-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const canCompleteTask = (task: typeof state.tasks[0]) => {\n    if (task.completed) return false;\n    if (task.type === 'social') return true;\n    if (task.requirement && task.progress !== undefined) {\n      return task.progress >= task.requirement;\n    }\n    return true;\n  };\n\n  const getProgressPercentage = (task: typeof state.tasks[0]) => {\n    if (!task.requirement || task.progress === undefined) return 0;\n    return Math.min((task.progress / task.requirement) * 100, 100);\n  };\n\n  const dailyTasks = state.tasks.filter(task => task.type === 'daily');\n  const socialTasks = state.tasks.filter(task => task.type === 'social');\n  const achievementTasks = state.tasks.filter(task => task.type === 'achievement');\n\n  return (\n    <div className=\"p-4 space-y-6 pb-20\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold text-white mb-2\">Tasks</h1>\n        <p className=\"text-gray-300\">Complete tasks to earn bonus Keze coins!</p>\n      </div>\n\n      {/* Daily Tasks */}\n      <div>\n        <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center gap-2\">\n          <Clock className=\"w-5 h-5 text-blue-400\" />\n          Daily Tasks\n        </h2>\n        <div className=\"space-y-3\">\n          {dailyTasks.map(task => (\n            <Card key={task.id} className=\"bg-black/20 border-white/10\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center gap-3\">\n                    {getTaskIcon(task.type)}\n                    <div>\n                      <h3 className=\"font-semibold text-white\">{task.title}</h3>\n                      <p className=\"text-sm text-gray-300\">{task.description}</p>\n                    </div>\n                  </div>\n                  <Badge className={`${getTaskBadgeColor(task.type)} text-white`}>\n                    {task.type}\n                  </Badge>\n                </div>\n\n                {task.requirement && task.progress !== undefined && (\n                  <div className=\"mb-3\">\n                    <div className=\"flex justify-between text-sm text-gray-300 mb-1\">\n                      <span>Progress</span>\n                      <span>{task.progress}/{task.requirement}</span>\n                    </div>\n                    <Progress value={getProgressPercentage(task)} className=\"h-2\" />\n                  </div>\n                )}\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-1 text-yellow-400\">\n                    <Coins className=\"w-4 h-4\" />\n                    <span className=\"font-semibold\">+{task.reward}</span>\n                  </div>\n\n                  {task.completed ? (\n                    <div className=\"flex items-center gap-2 text-green-400\">\n                      <CheckCircle className=\"w-4 h-4\" />\n                      <span className=\"text-sm\">Completed</span>\n                    </div>\n                  ) : (\n                    <Button\n                      onClick={() => handleCompleteTask(task.id)}\n                      disabled={!canCompleteTask(task)}\n                      size=\"sm\"\n                      className=\"bg-blue-600 hover:bg-blue-700\"\n                    >\n                      {canCompleteTask(task) ? 'Claim' : 'Not Ready'}\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      {/* Social Tasks */}\n      <div>\n        <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center gap-2\">\n          <Users className=\"w-5 h-5 text-green-400\" />\n          Social Tasks\n        </h2>\n        <div className=\"space-y-3\">\n          {socialTasks.map(task => (\n            <Card key={task.id} className=\"bg-black/20 border-white/10\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center gap-3\">\n                    {getTaskIcon(task.type)}\n                    <div>\n                      <h3 className=\"font-semibold text-white\">{task.title}</h3>\n                      <p className=\"text-sm text-gray-300\">{task.description}</p>\n                    </div>\n                  </div>\n                  <Badge className={`${getTaskBadgeColor(task.type)} text-white`}>\n                    {task.type}\n                  </Badge>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-1 text-yellow-400\">\n                    <Coins className=\"w-4 h-4\" />\n                    <span className=\"font-semibold\">+{task.reward}</span>\n                  </div>\n\n                  {task.completed ? (\n                    <div className=\"flex items-center gap-2 text-green-400\">\n                      <CheckCircle className=\"w-4 h-4\" />\n                      <span className=\"text-sm\">Completed</span>\n                    </div>\n                  ) : (\n                    <Button\n                      onClick={() => handleCompleteTask(task.id)}\n                      size=\"sm\"\n                      className=\"bg-green-600 hover:bg-green-700 flex items-center gap-2\"\n                    >\n                      <ExternalLink className=\"w-4 h-4\" />\n                      Visit\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      {/* Achievement Tasks */}\n      <div>\n        <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center gap-2\">\n          <Trophy className=\"w-5 h-5 text-yellow-400\" />\n          Achievements\n        </h2>\n        <div className=\"space-y-3\">\n          {achievementTasks.map(task => (\n            <Card key={task.id} className=\"bg-black/20 border-white/10\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center gap-3\">\n                    {getTaskIcon(task.type)}\n                    <div>\n                      <h3 className=\"font-semibold text-white\">{task.title}</h3>\n                      <p className=\"text-sm text-gray-300\">{task.description}</p>\n                    </div>\n                  </div>\n                  <Badge className={`${getTaskBadgeColor(task.type)} text-white`}>\n                    {task.type}\n                  </Badge>\n                </div>\n\n                {task.requirement && task.progress !== undefined && (\n                  <div className=\"mb-3\">\n                    <div className=\"flex justify-between text-sm text-gray-300 mb-1\">\n                      <span>Progress</span>\n                      <span>{task.progress}/{task.requirement}</span>\n                    </div>\n                    <Progress value={getProgressPercentage(task)} className=\"h-2\" />\n                  </div>\n                )}\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-1 text-yellow-400\">\n                    <Coins className=\"w-4 h-4\" />\n                    <span className=\"font-semibold\">+{task.reward}</span>\n                  </div>\n\n                  {task.completed ? (\n                    <div className=\"flex items-center gap-2 text-green-400\">\n                      <CheckCircle className=\"w-4 h-4\" />\n                      <span className=\"text-sm\">Completed</span>\n                    </div>\n                  ) : (\n                    <Button\n                      onClick={() => handleCompleteTask(task.id)}\n                      disabled={!canCompleteTask(task)}\n                      size=\"sm\"\n                      className=\"bg-yellow-600 hover:bg-yellow-700\"\n                    >\n                      {canCompleteTask(task) ? 'Claim' : 'In Progress'}\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2230, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,mMAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2295, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/FriendsScreen.tsx"],"sourcesContent":["/**\n * Created: 2025-08-07 05:52:00 UTC\n * Updated: 2025-08-07 05:52:00 UTC\n * Purpose: Friends screen with Telegram WebApp safe referral system\n * Features: Multiple referral code fallbacks, safe clipboard operations, error boundaries\n */\n'use client';\n\nimport React, { useState } from 'react';\nimport { useGame } from '@/lib/gameContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { Badge } from '@/components/ui/badge';\nimport { Users, Share, Copy, Gift, ExternalLink, Coins, CheckCircle } from 'lucide-react';\n\nexport function FriendsScreen() {\n  const { state, dispatch } = useGame();\n  const [copied, setCopied] = useState(false);\n\n  // Early return with loading state if not initialized\n  if (!state?.isInitialized) {\n    return (\n      <div className=\"p-4 space-y-6 pb-20 flex items-center justify-center min-h-96\">\n        <div className=\"text-center\">\n          <Users className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-white font-semibold mb-2\">Loading Friends...</h3>\n          <p className=\"text-gray-300 text-sm\">Please wait while we initialize your data</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Safe referral code generation with multiple fallbacks\n  const safeReferralCode = React.useMemo(() => {\n    try {\n      if (state.referralCode && state.referralCode !== 'undefined') {\n        return state.referralCode;\n      }\n      if (state.userId && state.userId !== 0) {\n        return state.userId.toString();\n      }\n      if (state.firstName || state.username) {\n        return `USER_${(state.firstName || state.username || '').slice(0, 3).toUpperCase()}${Math.random().toString(36).slice(2, 5)}`;\n      }\n      return `DEMO_${Math.random().toString(36).slice(2, 8).toUpperCase()}`;\n    } catch (error) {\n      console.error('Error generating safe referral code:', error);\n      return `SAFE_${Date.now().toString(36).slice(-6).toUpperCase()}`;\n    }\n  }, [state.referralCode, state.userId, state.firstName, state.username]);\n\n  // Safe referral link generation\n  const referralLink = React.useMemo(() => {\n    try {\n      return `https://t.me/kezeBot?start=${safeReferralCode}`;\n    } catch (error) {\n      console.error('Error generating referral link:', error);\n      return 'https://t.me/kezeBot';\n    }\n  }, [safeReferralCode]);\n\n  const shareText = `🪙 Join me in Keze Tap Game! Earn KEZE coins by tapping and playing games. Use my referral code: ${safeReferralCode}`;\n\n  const handleCopyReferralCode = async () => {\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(safeReferralCode);\n      } else {\n        // Fallback for older browsers or non-secure contexts\n        const textArea = document.createElement('textarea');\n        textArea.value = safeReferralCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n      }\n\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n\n      // Trigger haptic feedback if available\n      if ((window as any).triggerHaptic) {\n        (window as any).triggerHaptic('light');\n      }\n    } catch (err) {\n      console.error('Failed to copy referral code:', err);\n      // Visual feedback even if copy failed\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  const handleCopyLink = async () => {\n    try {\n      if (navigator.clipboard && window.isSecureContext) {\n        await navigator.clipboard.writeText(referralLink);\n      } else {\n        // Fallback for older browsers\n        const textArea = document.createElement('textarea');\n        textArea.value = referralLink;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n      }\n\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n\n      if ((window as any).triggerHaptic) {\n        (window as any).triggerHaptic('light');\n      }\n    } catch (err) {\n      console.error('Failed to copy link:', err);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  const handleShareTelegram = () => {\n    try {\n      const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(shareText)}`;\n\n      // Try Telegram WebApp sharing first if available\n      if (state.telegramWebAppAvailable && (window as any).Telegram?.WebApp?.openTelegramLink) {\n        (window as any).Telegram.WebApp.openTelegramLink(telegramUrl);\n      } else if (window.open) {\n        // Fallback to regular window.open\n        window.open(telegramUrl, '_blank', 'noopener,noreferrer');\n      } else {\n        // Final fallback: copy link to clipboard\n        handleCopyLink();\n      }\n    } catch (err) {\n      console.error('Failed to share:', err);\n      // Fallback: copy link to clipboard\n      handleCopyLink();\n    }\n  };\n\n  const handleInviteFriend = () => {\n    try {\n      // Simulate adding a new referral (in real app, this would be handled by the backend)\n      const mockReferral = {\n        id: Math.random().toString(36),\n        username: `User${Math.floor(Math.random() * 9999)}`,\n        earnings: Math.floor(Math.random() * 5000) + 1000,\n        joinedAt: new Date()\n      };\n      dispatch({ type: 'ADD_REFERRAL', referral: mockReferral });\n    } catch (error) {\n      console.error('Error adding mock referral:', error);\n    }\n  };\n\n  // Safe calculation of total referral earnings with error handling\n  const totalReferralEarnings = React.useMemo(() => {\n    try {\n      if (!state.referrals || !Array.isArray(state.referrals)) {\n        return 0;\n      }\n      return state.referrals.reduce((sum, ref) => {\n        const earnings = typeof ref?.earnings === 'number' ? ref.earnings : 0;\n        return sum + earnings;\n      }, 0);\n    } catch (error) {\n      console.error('Error calculating referral earnings:', error);\n      return 0;\n    }\n  }, [state.referrals]);\n\n  // Safe referrals array\n  const safeReferrals = React.useMemo(() => {\n    try {\n      return Array.isArray(state.referrals) ? state.referrals : [];\n    } catch (error) {\n      console.error('Error accessing referrals:', error);\n      return [];\n    }\n  }, [state.referrals]);\n\n  return (\n    <div className=\"p-4 space-y-6 pb-20\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold text-white mb-2\">Friends</h1>\n        <p className=\"text-gray-300\">Invite friends and earn bonus Keze coins!</p>\n      </div>\n\n      {/* Referral Stats */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-4 text-center\">\n            <Users className=\"w-8 h-8 text-blue-400 mx-auto mb-2\" />\n            <div className=\"text-2xl font-bold text-white\">{safeReferrals.length}</div>\n            <div className=\"text-sm text-gray-300\">Friends Invited</div>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-4 text-center\">\n            <Coins className=\"w-8 h-8 text-yellow-400 mx-auto mb-2\" />\n            <div className=\"text-2xl font-bold text-yellow-400\">{totalReferralEarnings.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-300\">Bonus Earned</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Referral Rewards */}\n      <Card className=\"bg-gradient-to-r from-purple-600/20 to-blue-600/20 border-purple-400/30\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <Gift className=\"w-5 h-5\" />\n            Referral Rewards\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <div className=\"flex items-center justify-between p-3 bg-black/20 rounded-lg\">\n            <div>\n              <div className=\"text-white font-semibold\">Invite a Friend</div>\n              <div className=\"text-sm text-gray-300\">Both you and your friend get bonus Keze coins</div>\n            </div>\n            <div className=\"flex items-center gap-1 text-yellow-400\">\n              <Coins className=\"w-4 h-4\" />\n              <span className=\"font-bold\">+1,000</span>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between p-3 bg-black/20 rounded-lg\">\n            <div>\n              <div className=\"text-white font-semibold\">Friend Earns 10K+</div>\n              <div className=\"text-sm text-gray-300\">Additional bonus when your friend succeeds</div>\n            </div>\n            <div className=\"flex items-center gap-1 text-yellow-400\">\n              <Coins className=\"w-4 h-4\" />\n              <span className=\"font-bold\">+2,500</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Referral Code Section */}\n      <Card className=\"bg-black/20 border-white/10\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Your Referral Code</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-3 bg-black/30 rounded-lg\">\n            <span className=\"text-xl font-mono text-yellow-400\">{safeReferralCode}</span>\n            <Button\n              onClick={handleCopyReferralCode}\n              size=\"sm\"\n              variant=\"outline\"\n              className=\"border-yellow-400 text-yellow-400 hover:bg-yellow-400 hover:text-black\"\n            >\n              {copied ? <CheckCircle className=\"w-4 h-4\" /> : <Copy className=\"w-4 h-4\" />}\n            </Button>\n          </div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Button\n              onClick={handleCopyLink}\n              variant=\"outline\"\n              className=\"border-blue-400 text-blue-400 hover:bg-blue-400 hover:text-black\"\n            >\n              <Copy className=\"w-4 h-4 mr-2\" />\n              Copy Link\n            </Button>\n            <Button\n              onClick={handleShareTelegram}\n              className=\"bg-blue-600 hover:bg-blue-700\"\n            >\n              <Share className=\"w-4 h-4 mr-2\" />\n              Share\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Demo Invite Button */}\n      <Card className=\"bg-black/20 border-white/10\">\n        <CardContent className=\"p-4\">\n          <Button\n            onClick={handleInviteFriend}\n            className=\"w-full bg-green-600 hover:bg-green-700\"\n          >\n            <Users className=\"w-4 h-4 mr-2\" />\n            Simulate Friend Invite (Demo)\n          </Button>\n        </CardContent>\n      </Card>\n\n      {/* Friends List */}\n      {safeReferrals.length > 0 && (\n        <div>\n          <h2 className=\"text-xl font-semibold text-white mb-3 flex items-center gap-2\">\n            <Users className=\"w-5 h-5\" />\n            Your Friends ({safeReferrals.length})\n          </h2>\n          <div className=\"space-y-3\">\n            {safeReferrals.map(referral => {\n              try {\n                return (\n                  <Card key={referral.id} className=\"bg-black/20 border-white/10\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <Avatar className=\"w-10 h-10\">\n                            <AvatarFallback className=\"bg-purple-600 text-white\">\n                              {(referral.username || 'U').charAt(0).toUpperCase()}\n                            </AvatarFallback>\n                          </Avatar>\n                          <div>\n                            <div className=\"font-semibold text-white\">{referral.username || 'Anonymous'}</div>\n                            <div className=\"text-sm text-gray-300\">\n                              Joined {referral.joinedAt?.toLocaleDateString() || 'Recently'}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"flex items-center gap-1 text-yellow-400\">\n                            <Coins className=\"w-4 h-4\" />\n                            <span className=\"font-semibold\">{(referral.earnings || 0).toLocaleString()}</span>\n                          </div>\n                          <Badge\n                            variant=\"outline\"\n                            className=\"text-green-400 border-green-400 text-xs\"\n                          >\n                            Active\n                          </Badge>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              } catch (error) {\n                console.error('Error rendering referral:', error);\n                return null;\n              }\n            })}\n          </div>\n        </div>\n      )}\n\n      {safeReferrals.length === 0 && (\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-8 text-center\">\n            <Users className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-white font-semibold mb-2\">No friends yet</h3>\n            <p className=\"text-gray-300 text-sm mb-4\">\n              Start inviting friends to earn bonus coins and build your network!\n            </p>\n            <Button onClick={handleShareTelegram} className=\"bg-blue-600 hover:bg-blue-700\">\n              <Share className=\"w-4 h-4 mr-2\" />\n              Invite Your First Friend\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3190, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/ProfileScreen.tsx"],"sourcesContent":["'use client';\n\nimport { useGame } from '@/lib/gameContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport {\n  User,\n  Coins,\n  Target,\n  TrendingUp,\n  Zap,\n  Users,\n  Trophy,\n  Calendar,\n  Star,\n  Award\n} from 'lucide-react';\n\nexport function ProfileScreen() {\n  const { state } = useGame();\n\n  const experiencePercentage = (state.experience / state.experienceToNext) * 100;\n  const completedTasks = state.tasks.filter(task => task.completed).length;\n  const totalTasks = state.tasks.length;\n  const taskCompletionRate = (completedTasks / totalTasks) * 100;\n\n  // Calculate user tier based on total earnings\n  const getUserTier = (earnings: number) => {\n    if (earnings >= 100000) return { name: 'Diamond', color: 'text-cyan-400', bg: 'bg-cyan-600' };\n    if (earnings >= 50000) return { name: 'Platinum', color: 'text-gray-300', bg: 'bg-gray-600' };\n    if (earnings >= 25000) return { name: 'Gold', color: 'text-yellow-400', bg: 'bg-yellow-600' };\n    if (earnings >= 10000) return { name: 'Silver', color: 'text-gray-400', bg: 'bg-gray-500' };\n    return { name: 'Bronze', color: 'text-orange-400', bg: 'bg-orange-600' };\n  };\n\n  const userTier = getUserTier(state.totalEarnings);\n\n  // Calculate achievements\n  const achievements = [\n    {\n      id: 'first-tap',\n      name: 'First Tap',\n      description: 'Made your first tap',\n      earned: state.tapsCount > 0,\n      icon: Target\n    },\n    {\n      id: 'hundred-taps',\n      name: 'Tap Master',\n      description: 'Made 100 taps',\n      earned: state.tapsCount >= 100,\n      icon: Target\n    },\n    {\n      id: 'thousand-taps',\n      name: 'Tap Champion',\n      description: 'Made 1,000 taps',\n      earned: state.tapsCount >= 1000,\n      icon: Award\n    },\n    {\n      id: 'level-5',\n      name: 'Rising Star',\n      description: 'Reached level 5',\n      earned: state.level >= 5,\n      icon: Star\n    },\n    {\n      id: 'first-friend',\n      name: 'Social Butterfly',\n      description: 'Invited first friend',\n      earned: state.referrals.length > 0,\n      icon: Users\n    },\n    {\n      id: 'task-master',\n      name: 'Task Master',\n      description: 'Completed 5 tasks',\n      earned: completedTasks >= 5,\n      icon: Trophy\n    }\n  ];\n\n  const earnedAchievements = achievements.filter(a => a.earned);\n\n  return (\n    <div className=\"p-4 space-y-6 pb-20\">\n      {/* Profile Header */}\n      <Card className=\"bg-gradient-to-r from-purple-600/20 to-blue-600/20 border-purple-400/30\">\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Avatar className=\"w-16 h-16\">\n              <AvatarFallback className=\"bg-purple-600 text-white text-xl\">\n                <User className=\"w-8 h-8\" />\n              </AvatarFallback>\n            </Avatar>\n            <div>\n              <h1 className=\"text-2xl font-bold text-white\">Player #{state.referralCode || state.userId?.toString() || 'DEMO'}</h1>\n              <Badge className={`${userTier.bg} text-white`}>\n                {userTier.name} Tier\n              </Badge>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-yellow-400\">{state.coins.toLocaleString()}</div>\n              <div className=\"text-sm text-gray-300\">Keze Coins</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-blue-400\">{state.tonCoins.toLocaleString()}</div>\n              <div className=\"text-sm text-gray-300\">TON Coins</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-purple-400\">Level {state.level}</div>\n              <div className=\"text-sm text-gray-300\">Current Level</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Experience Progress */}\n      <Card className=\"bg-black/20 border-white/10\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <TrendingUp className=\"w-5 h-5\" />\n            Level Progress\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-300\">Level {state.level}</span>\n              <span className=\"text-gray-300\">Level {state.level + 1}</span>\n            </div>\n            <Progress value={experiencePercentage} className=\"h-3\" />\n            <div className=\"text-center text-sm text-gray-300\">\n              {state.experience.toLocaleString()} / {state.experienceToNext.toLocaleString()} XP\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-4 text-center\">\n            <Target className=\"w-8 h-8 text-blue-400 mx-auto mb-2\" />\n            <div className=\"text-xl font-bold text-white\">{state.tapsCount.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-300\">Total Taps</div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-4 text-center\">\n            <Coins className=\"w-8 h-8 text-yellow-400 mx-auto mb-2\" />\n            <div className=\"text-xl font-bold text-yellow-400\">{state.totalEarnings.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-300\">Total Earned</div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-4 text-center\">\n            <Users className=\"w-8 h-8 text-green-400 mx-auto mb-2\" />\n            <div className=\"text-xl font-bold text-white\">{state.referrals.length}</div>\n            <div className=\"text-sm text-gray-300\">Friends Invited</div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-black/20 border-white/10\">\n          <CardContent className=\"p-4 text-center\">\n            <Trophy className=\"w-8 h-8 text-purple-400 mx-auto mb-2\" />\n            <div className=\"text-xl font-bold text-white\">{completedTasks}/{totalTasks}</div>\n            <div className=\"text-sm text-gray-300\">Tasks Completed</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Game Stats */}\n      <Card className=\"bg-black/20 border-white/10\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <Zap className=\"w-5 h-5\" />\n            Game Stats\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-gray-300\">Coins per Tap</span>\n            <span className=\"text-white font-semibold\">+{state.coinsPerTap}</span>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-gray-300\">Max Energy</span>\n            <span className=\"text-white font-semibold\">{state.maxEnergy}</span>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-gray-300\">Current Energy</span>\n            <span className=\"text-white font-semibold\">{state.energy}</span>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-gray-300\">Task Completion</span>\n            <span className=\"text-white font-semibold\">{taskCompletionRate.toFixed(1)}%</span>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Achievements */}\n      <Card className=\"bg-black/20 border-white/10\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <Award className=\"w-5 h-5\" />\n            Achievements ({earnedAchievements.length}/{achievements.length})\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 gap-3\">\n            {achievements.map(achievement => {\n              const IconComponent = achievement.icon;\n              return (\n                <div\n                  key={achievement.id}\n                  className={`flex items-center gap-3 p-3 rounded-lg border ${\n                    achievement.earned\n                      ? 'bg-green-500/10 border-green-500/30'\n                      : 'bg-gray-500/10 border-gray-500/30'\n                  }`}\n                >\n                  <IconComponent\n                    className={`w-6 h-6 ${\n                      achievement.earned ? 'text-green-400' : 'text-gray-500'\n                    }`}\n                  />\n                  <div className=\"flex-1\">\n                    <div\n                      className={`font-semibold ${\n                        achievement.earned ? 'text-white' : 'text-gray-400'\n                      }`}\n                    >\n                      {achievement.name}\n                    </div>\n                    <div className=\"text-sm text-gray-400\">{achievement.description}</div>\n                  </div>\n                  {achievement.earned && (\n                    <Badge variant=\"outline\" className=\"text-green-400 border-green-400\">\n                      Earned\n                    </Badge>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Trading Info */}\n      <Card className=\"bg-gradient-to-r from-yellow-600/20 to-orange-600/20 border-yellow-400/30\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <Coins className=\"w-5 h-5\" />\n            Token Trading\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center space-y-2\">\n            <p className=\"text-gray-300 text-sm\">\n              Your Keze coins will be convertible to tradeable tokens when we list on exchanges!\n            </p>\n            <div className=\"text-2xl font-bold text-yellow-400\">\n              {state.coins.toLocaleString()} KEZE Ready\n            </div>\n            <Badge variant=\"outline\" className=\"text-yellow-400 border-yellow-400\">\n              Exchange Listing Coming Soon\n            </Badge>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4082, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/GamesScreen.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useGame } from '@/lib/gameContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Coins,\n  RotateCcw,\n  Package,\n  DollarSign,\n  TrendingUp,\n  Sparkles,\n  Gift,\n  Zap\n} from 'lucide-react';\n\nexport function GamesScreen() {\n  const { state, dispatch } = useGame();\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [isHunting, setIsHunting] = useState(false);\n  const [isFlipping, setIsFlipping] = useState(false);\n  const [lastSpinResult, setLastSpinResult] = useState<any>(null);\n  const [lastHuntResult, setLastHuntResult] = useState<any>(null);\n  const [lastFlipResult, setLastFlipResult] = useState<any>(null);\n\n  // Spinner Game\n  const spinWheel = async (stake: number) => {\n    if (state.coins < stake || isSpinning) return;\n\n    setIsSpinning(true);\n    setLastSpinResult(null);\n\n    // Trigger haptic feedback\n    if ((window as any).triggerHaptic) {\n      (window as any).triggerHaptic('medium');\n    }\n\n    // Try backend first, fallback to local\n    if (state.userId) {\n      try {\n        const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'https://keze.bissols.com/api'}/game/spin`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ telegramId: state.userId, stake })\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          dispatch({ type: 'LOAD_GAME', state: { coins: data.coins, tonCoins: data.tonCoins } });\n          setLastSpinResult(data.result);\n          setIsSpinning(false);\n          return;\n        }\n      } catch (error) {\n        console.log('Backend unavailable, using local game logic');\n      }\n    }\n\n    // Local game logic fallback\n    setTimeout(() => {\n      const random = Math.random();\n      let result = { coins: 0, tonCoins: 0 };\n\n      if (random < 0.02) { // 2% chance for TON coins\n        result = { coins: stake * 10, tonCoins: Math.floor(stake / 1000) };\n      } else if (random < 0.1) { // 8% chance for big win\n        result = { coins: stake * 5, tonCoins: 0 };\n      } else if (random < 0.3) { // 20% chance for good win\n        result = { coins: stake * 2, tonCoins: 0 };\n      } else if (random < 0.5) { // 20% chance for small win\n        result = { coins: Math.floor(stake * 1.5), tonCoins: 0 };\n      } else if (random < 0.7) { // 20% chance to break even\n        result = { coins: stake, tonCoins: 0 };\n      } // 30% chance to lose (coins: 0)\n\n      dispatch({ type: 'SPIN_WHEEL', stake, result });\n      setLastSpinResult(result);\n      setIsSpinning(false);\n    }, 3000);\n  };\n\n  // Treasure Hunt Game\n  const huntTreasure = async (stake: number) => {\n    if (state.coins < stake || isHunting) return;\n\n    setIsHunting(true);\n    setLastHuntResult(null);\n\n    // Simulate hunting delay\n    setTimeout(() => {\n      const random = Math.random();\n      let result = { coins: 0, found: false };\n\n      if (random < 0.4) { // 40% chance to find treasure\n        const multiplier = Math.random() < 0.1 ? 10 : Math.random() < 0.3 ? 5 : 3;\n        result = { coins: stake * multiplier, found: true };\n      }\n\n      dispatch({ type: 'TREASURE_HUNT', stake, result });\n      setLastHuntResult(result);\n      setIsHunting(false);\n    }, 2000);\n  };\n\n  // Coin Flip Game\n  const flipCoin = async (stake: number, guess: 'heads' | 'tails') => {\n    if (state.coins < stake || isFlipping) return;\n\n    setIsFlipping(true);\n    setLastFlipResult(null);\n\n    // Simulate coin flip delay\n    setTimeout(() => {\n      const flip = Math.random() < 0.5 ? 'heads' : 'tails';\n      const won = flip === guess;\n      const result = { coins: won ? stake * 2 : 0, won, flip, guess };\n\n      dispatch({ type: 'COIN_FLIP', stake, result });\n      setLastFlipResult(result);\n      setIsFlipping(false);\n    }, 2000);\n  };\n\n  const stakeOptions = [100, 500, 1000, 5000, 10000];\n\n  return (\n    <div className=\"p-4 space-y-6 pb-20\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold text-white mb-2\">🎮 Games</h1>\n        <p className=\"text-gray-300\">Stake your Keze coins to win big!</p>\n        <div className=\"flex items-center justify-center gap-2 mt-3\">\n          <Coins className=\"w-5 h-5 text-yellow-400\" />\n          <span className=\"text-lg font-bold text-yellow-400\">\n            {state.coins.toLocaleString()} KEZE\n          </span>\n        </div>\n      </div>\n\n      <Tabs defaultValue=\"spinner\" className=\"w-full\">\n        <TabsList className=\"w-full bg-black/20 grid grid-cols-3 gap-1\">\n          <TabsTrigger value=\"spinner\" className=\"text-xs\">\n            🎰 Spinner\n          </TabsTrigger>\n          <TabsTrigger value=\"treasure\" className=\"text-xs\">\n            📦 Treasure\n          </TabsTrigger>\n          <TabsTrigger value=\"coinflip\" className=\"text-xs\">\n            🪙 Flip\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Spinner Game */}\n        <TabsContent value=\"spinner\" className=\"space-y-4\">\n          <Card className=\"bg-gradient-to-r from-purple-600/20 to-pink-600/20 border-purple-400/30\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <RotateCcw className=\"w-5 h-5\" />\n                Keze Spinner\n              </CardTitle>\n              <p className=\"text-gray-300 text-sm\">\n                Spin the wheel to win Keze coins and rare TON coins!\n              </p>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {/* Spinner Visual */}\n              <div className=\"relative mx-auto w-40 h-40 mb-6\">\n                <div className={`w-full h-full rounded-full bg-gradient-to-r from-yellow-400 via-red-500 to-purple-600 border-4 border-white shadow-lg ${isSpinning ? 'animate-spin' : ''}`}>\n                  <div className=\"absolute inset-4 rounded-full bg-black/20 flex items-center justify-center\">\n                    <Sparkles className=\"w-8 h-8 text-white\" />\n                  </div>\n                </div>\n                <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-2\">\n                  <div className=\"w-0 h-0 border-l-4 border-r-4 border-b-8 border-l-transparent border-r-transparent border-b-white\"></div>\n                </div>\n              </div>\n\n              {/* Stake Options */}\n              <div className=\"grid grid-cols-3 gap-2\">\n                {stakeOptions.slice(0, 3).map(amount => (\n                  <Button\n                    key={amount}\n                    onClick={() => spinWheel(amount)}\n                    disabled={state.coins < amount || isSpinning}\n                    className=\"bg-purple-600 hover:bg-purple-700 disabled:opacity-50\"\n                  >\n                    {amount.toLocaleString()}\n                  </Button>\n                ))}\n              </div>\n\n              {/* Spin Result */}\n              {lastSpinResult && (\n                <div className=\"text-center p-4 bg-black/20 rounded-lg\">\n                  {lastSpinResult.tonCoins > 0 ? (\n                    <div className=\"text-blue-400 font-bold\">\n                      🎉 JACKPOT! +{lastSpinResult.coins.toLocaleString()} KEZE + {lastSpinResult.tonCoins} TON!\n                    </div>\n                  ) : lastSpinResult.coins > 0 ? (\n                    <div className=\"text-green-400 font-bold\">\n                      🎊 Won {lastSpinResult.coins.toLocaleString()} KEZE!\n                    </div>\n                  ) : (\n                    <div className=\"text-red-400\">\n                      💔 Better luck next time!\n                    </div>\n                  )}\n                </div>\n              )}\n\n              <div className=\"text-xs text-gray-400 text-center\">\n                Chances: 2% TON coins • 8% Big Win (5x) • 20% Good Win (2x) • 30% Loss\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Treasure Hunt Game */}\n        <TabsContent value=\"treasure\" className=\"space-y-4\">\n          <Card className=\"bg-gradient-to-r from-yellow-600/20 to-orange-600/20 border-yellow-400/30\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <Package className=\"w-5 h-5\" />\n                Treasure Hunt\n              </CardTitle>\n              <p className=\"text-gray-300 text-sm\">\n                Click the treasure boxes to find hidden Keze coins!\n              </p>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {/* Treasure Boxes */}\n              <div className=\"grid grid-cols-3 gap-4 mb-6\">\n                {[1, 2, 3, 4, 5, 6].map(box => (\n                  <div\n                    key={box}\n                    className=\"w-16 h-16 mx-auto bg-gradient-to-b from-yellow-500 to-yellow-700 rounded-lg border-2 border-yellow-400 flex items-center justify-center cursor-pointer hover:scale-105 transition-transform shadow-lg\"\n                  >\n                    <Gift className=\"w-8 h-8 text-white\" />\n                  </div>\n                ))}\n              </div>\n\n              {/* Stake Options */}\n              <div className=\"grid grid-cols-3 gap-2\">\n                {stakeOptions.slice(0, 3).map(amount => (\n                  <Button\n                    key={amount}\n                    onClick={() => huntTreasure(amount)}\n                    disabled={state.coins < amount || isHunting}\n                    className=\"bg-yellow-600 hover:bg-yellow-700 disabled:opacity-50\"\n                  >\n                    {amount.toLocaleString()}\n                  </Button>\n                ))}\n              </div>\n\n              {/* Hunt Result */}\n              {lastHuntResult && (\n                <div className=\"text-center p-4 bg-black/20 rounded-lg\">\n                  {lastHuntResult.found ? (\n                    <div className=\"text-green-400 font-bold\">\n                      🏆 Treasure found! +{lastHuntResult.coins.toLocaleString()} KEZE!\n                    </div>\n                  ) : (\n                    <div className=\"text-red-400\">\n                      😞 No treasure this time!\n                    </div>\n                  )}\n                </div>\n              )}\n\n              <div className=\"text-xs text-gray-400 text-center\">\n                40% chance to find treasure • Rewards: 3x-10x your stake\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Coin Flip Game */}\n        <TabsContent value=\"coinflip\" className=\"space-y-4\">\n          <Card className=\"bg-gradient-to-r from-blue-600/20 to-cyan-600/20 border-blue-400/30\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center gap-2\">\n                <DollarSign className=\"w-5 h-5\" />\n                Coin Flip\n              </CardTitle>\n              <p className=\"text-gray-300 text-sm\">\n                Choose heads or tails and double your Keze coins!\n              </p>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {/* Coin Visual */}\n              <div className=\"relative mx-auto w-32 h-32 mb-6\">\n                <div className={`w-full h-full rounded-full bg-gradient-to-r from-yellow-400 to-yellow-600 border-4 border-yellow-300 shadow-lg flex items-center justify-center ${isFlipping ? 'animate-spin' : ''}`}>\n                  <Coins className=\"w-12 h-12 text-white\" />\n                </div>\n              </div>\n\n              {/* Stake Selection */}\n              <div className=\"text-center mb-4\">\n                <p className=\"text-white font-semibold mb-2\">Choose your stake:</p>\n                <div className=\"grid grid-cols-2 gap-2\">\n                  {stakeOptions.slice(0, 4).map(amount => (\n                    <div key={amount} className=\"space-y-2\">\n                      <div className=\"text-yellow-400 font-bold\">{amount.toLocaleString()} KEZE</div>\n                      <div className=\"grid grid-cols-2 gap-1\">\n                        <Button\n                          onClick={() => flipCoin(amount, 'heads')}\n                          disabled={state.coins < amount || isFlipping}\n                          className=\"bg-blue-600 hover:bg-blue-700 disabled:opacity-50 text-xs\"\n                        >\n                          Heads\n                        </Button>\n                        <Button\n                          onClick={() => flipCoin(amount, 'tails')}\n                          disabled={state.coins < amount || isFlipping}\n                          className=\"bg-cyan-600 hover:bg-cyan-700 disabled:opacity-50 text-xs\"\n                        >\n                          Tails\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Flip Result */}\n              {lastFlipResult && (\n                <div className=\"text-center p-4 bg-black/20 rounded-lg\">\n                  <div className=\"mb-2\">\n                    <span className=\"text-gray-300\">Coin landed on: </span>\n                    <span className=\"font-bold text-white\">{lastFlipResult.flip}</span>\n                  </div>\n                  <div className=\"mb-2\">\n                    <span className=\"text-gray-300\">You chose: </span>\n                    <span className=\"font-bold text-white\">{lastFlipResult.guess}</span>\n                  </div>\n                  {lastFlipResult.won ? (\n                    <div className=\"text-green-400 font-bold\">\n                      🎉 You won! +{lastFlipResult.coins.toLocaleString()} KEZE!\n                    </div>\n                  ) : (\n                    <div className=\"text-red-400\">\n                      😔 You lost! Better luck next time!\n                    </div>\n                  )}\n                </div>\n              )}\n\n              <div className=\"text-xs text-gray-400 text-center\">\n                50% chance to win • Double your stake if you guess correctly\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Game Stats */}\n      <Card className=\"bg-black/20 border-white/10\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <TrendingUp className=\"w-5 h-5\" />\n            Gaming Stats\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"grid grid-cols-2 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-xl font-bold text-yellow-400\">{state.coins.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-300\">Available KEZE</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-xl font-bold text-blue-400\">{state.tonCoins.toLocaleString()}</div>\n            <div className=\"text-sm text-gray-300\">TON Coins</div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {state.coins < 100 && (\n        <Card className=\"bg-red-500/10 border-red-500/30\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-red-400 text-sm\">\n              You need at least 100 KEZE coins to play games. Go tap to earn more!\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5040, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/BoostScreen.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useGame } from '@/lib/gameContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  Zap,\n  TrendingUp,\n  Battery,\n  Star,\n  Clock,\n  Coins,\n  ShoppingCart,\n  Timer\n} from 'lucide-react';\n\ninterface BoostOption {\n  id: 'tapPower' | 'energy' | 'xp' | 'level';\n  title: string;\n  description: string;\n  icon: React.ComponentType<any>;\n  cost: number;\n  duration: number; // in minutes\n  multiplier: number;\n  color: string;\n}\n\nexport function BoostScreen() {\n  const { state, dispatch } = useGame();\n\n  const boostOptions: BoostOption[] = [\n    {\n      id: 'tapPower',\n      title: '2x Tap Power',\n      description: 'Double your coins per tap',\n      icon: TrendingUp,\n      cost: 1000,\n      duration: 30,\n      multiplier: 2,\n      color: 'text-green-400'\n    },\n    {\n      id: 'energy',\n      title: '2x Energy Regen',\n      description: 'Regenerate energy twice as fast',\n      icon: Battery,\n      cost: 800,\n      duration: 60,\n      multiplier: 2,\n      color: 'text-blue-400'\n    },\n    {\n      id: 'xp',\n      title: '2x Experience',\n      description: 'Gain double XP from all actions',\n      icon: Star,\n      cost: 1200,\n      duration: 45,\n      multiplier: 2,\n      color: 'text-purple-400'\n    },\n    {\n      id: 'level',\n      title: 'Level Boost',\n      description: 'Temporary level increase benefits',\n      icon: Zap,\n      cost: 1500,\n      duration: 20,\n      multiplier: 2,\n      color: 'text-yellow-400'\n    }\n  ];\n\n  const handlePurchaseBoost = (boostType: BoostOption['id'], cost: number, duration: number) => {\n    if (state.coins >= cost) {\n      dispatch({\n        type: 'ACTIVATE_BOOST',\n        boostType,\n        cost,\n        duration\n      });\n\n      // Trigger haptic feedback\n      if ((window as any).triggerHaptic) {\n        (window as any).triggerHaptic('medium');\n      }\n    }\n  };\n\n  const getTimeRemaining = (expiryTime: number): string => {\n    const now = Date.now();\n    const remaining = Math.max(0, expiryTime - now);\n\n    if (remaining === 0) return '';\n\n    const minutes = Math.floor(remaining / (1000 * 60));\n    const seconds = Math.floor((remaining % (1000 * 60)) / 1000);\n\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const isBoostActive = (boostType: BoostOption['id']): boolean => {\n    const now = Date.now();\n    switch (boostType) {\n      case 'tapPower':\n        return now < state.boosts.tapPowerBoostExpiry;\n      case 'energy':\n        return now < state.boosts.energyBoostExpiry;\n      case 'xp':\n        return now < state.boosts.xpBoostExpiry;\n      case 'level':\n        return now < state.boosts.levelBoostExpiry;\n      default:\n        return false;\n    }\n  };\n\n  const getBoostExpiry = (boostType: BoostOption['id']): number => {\n    switch (boostType) {\n      case 'tapPower':\n        return state.boosts.tapPowerBoostExpiry;\n      case 'energy':\n        return state.boosts.energyBoostExpiry;\n      case 'xp':\n        return state.boosts.xpBoostExpiry;\n      case 'level':\n        return state.boosts.levelBoostExpiry;\n      default:\n        return 0;\n    }\n  };\n\n  // Check for expired boosts every second\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({ type: 'CHECK_BOOST_EXPIRY' });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [dispatch]);\n\n  return (\n    <div className=\"p-4 space-y-6 pb-20\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold text-white mb-2\">⚡ Boosts</h1>\n        <p className=\"text-gray-300\">Enhance your gameplay with powerful temporary boosts!</p>\n        <div className=\"flex items-center justify-center gap-2 mt-3\">\n          <Coins className=\"w-5 h-5 text-yellow-400\" />\n          <span className=\"text-lg font-bold text-yellow-400\">\n            {state.coins.toLocaleString()} KEZE\n          </span>\n        </div>\n      </div>\n\n      {/* Active Boosts */}\n      <div className=\"space-y-3\">\n        <h2 className=\"text-xl font-semibold text-white\">🔥 Active Boosts</h2>\n        {boostOptions.some(boost => isBoostActive(boost.id)) ? (\n          <div className=\"grid gap-3\">\n            {boostOptions\n              .filter(boost => isBoostActive(boost.id))\n              .map(boost => {\n                const IconComponent = boost.icon;\n                const timeRemaining = getTimeRemaining(getBoostExpiry(boost.id));\n\n                return (\n                  <Card key={boost.id} className=\"bg-gradient-to-r from-green-500/20 to-blue-500/20 border-green-400/30\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <IconComponent className={`w-6 h-6 ${boost.color}`} />\n                          <div>\n                            <div className=\"font-semibold text-white\">{boost.title}</div>\n                            <div className=\"text-sm text-gray-300\">{boost.description}</div>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <Badge className=\"bg-green-600 text-white mb-1\">\n                            ACTIVE\n                          </Badge>\n                          <div className=\"flex items-center gap-1 text-green-400 text-sm\">\n                            <Timer className=\"w-3 h-3\" />\n                            <span>{timeRemaining}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n          </div>\n        ) : (\n          <Card className=\"bg-black/20 border-white/10\">\n            <CardContent className=\"p-6 text-center\">\n              <Zap className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n              <p className=\"text-gray-400\">No active boosts</p>\n              <p className=\"text-gray-500 text-sm\">Purchase a boost below to enhance your gameplay!</p>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n\n      {/* Available Boosts */}\n      <div className=\"space-y-3\">\n        <h2 className=\"text-xl font-semibold text-white\">🛒 Available Boosts</h2>\n        <div className=\"grid gap-4\">\n          {boostOptions.map(boost => {\n            const IconComponent = boost.icon;\n            const canAfford = state.coins >= boost.cost;\n            const isActive = isBoostActive(boost.id);\n\n            return (\n              <Card key={boost.id} className=\"bg-black/20 border-white/10\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div className=\"flex items-center gap-3\">\n                      <IconComponent className={`w-6 h-6 ${boost.color}`} />\n                      <div>\n                        <h3 className=\"font-semibold text-white\">{boost.title}</h3>\n                        <p className=\"text-sm text-gray-300\">{boost.description}</p>\n                      </div>\n                    </div>\n                    <Badge className={`${boost.color.replace('text-', 'bg-').replace('400', '600')} text-white`}>\n                      {boost.multiplier}x\n                    </Badge>\n                  </div>\n\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div className=\"flex items-center gap-4 text-sm text-gray-300\">\n                      <div className=\"flex items-center gap-1\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>{boost.duration}m</span>\n                      </div>\n                      <div className=\"flex items-center gap-1\">\n                        <Coins className=\"w-4 h-4 text-yellow-400\" />\n                        <span className=\"text-yellow-400\">{boost.cost.toLocaleString()}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Button\n                    onClick={() => handlePurchaseBoost(boost.id, boost.cost, boost.duration)}\n                    disabled={!canAfford || isActive}\n                    className={`w-full ${canAfford && !isActive ? boost.color.replace('text-', 'bg-').replace('400', '600') + ' hover:' + boost.color.replace('text-', 'bg-').replace('400', '700') : 'bg-gray-600'}`}\n                  >\n                    {isActive ? (\n                      <>\n                        <Timer className=\"w-4 h-4 mr-2\" />\n                        Active\n                      </>\n                    ) : canAfford ? (\n                      <>\n                        <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                        Purchase\n                      </>\n                    ) : (\n                      'Not Enough Coins'\n                    )}\n                  </Button>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Boost Tips */}\n      <Card className=\"bg-gradient-to-r from-purple-600/20 to-pink-600/20 border-purple-400/30\">\n        <CardHeader>\n          <CardTitle className=\"text-white flex items-center gap-2\">\n            <Star className=\"w-5 h-5\" />\n            Boost Tips\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-2 text-sm text-gray-300\">\n          <p>• Stack multiple boosts for maximum efficiency</p>\n          <p>• Use Tap Power boost during active gaming sessions</p>\n          <p>• Energy boost is great for long grinding sessions</p>\n          <p>• XP boost helps you level up faster for better rewards</p>\n          <p>• Boosts remain active even when you're offline!</p>\n        </CardContent>\n      </Card>\n\n      {/* Low Coins Warning */}\n      {state.coins < 800 && (\n        <Card className=\"bg-red-500/10 border-red-500/30\">\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-red-400 text-sm\">\n              💡 Need more coins? Tap more, complete tasks, or play games to earn KEZE coins!\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5730, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/components/TapGame.tsx"],"sourcesContent":["/**\n * Created: 2025-08-07 05:56:00 UTC\n * Updated: 2025-08-07 05:56:00 UTC\n * Purpose: Main game component with 6-tab navigation and multi-finger tapping\n * Features: Tap, Games, Boosts, Tasks, Friends, Profile tabs\n */\n'use client';\n\nimport { useState } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { TapScreen } from './TapScreen';\nimport { TasksScreen } from './TasksScreen';\nimport { FriendsScreen } from './FriendsScreen';\nimport { ProfileScreen } from './ProfileScreen';\nimport { GamesScreen } from './GamesScreen';\nimport { BoostScreen } from './BoostScreen';\nimport { useGame } from '@/lib/gameContext';\nimport { Coins, Zap, Target, Users, User, Gamepad2, TrendingUp } from 'lucide-react';\n\nexport function TapGame() {\n  const [activeTab, setActiveTab] = useState('tap');\n  const { state } = useGame();\n\n  return (\n    <div className=\"max-w-md mx-auto min-h-screen bg-gradient-to-b from-blue-900 via-purple-900 to-indigo-900 text-white\">\n      {/* Header */}\n      <div className=\"p-4 text-center border-b border-white/10\">\n        <div className=\"flex items-center justify-center gap-4 mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <Coins className=\"w-6 h-6 text-yellow-400\" />\n            <span className=\"text-xl font-bold text-yellow-400\">\n              {state.coins.toLocaleString()}\n            </span>\n            <span className=\"text-sm text-yellow-300\">KEZE</span>\n          </div>\n          {state.tonCoins > 0 && (\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold\">\n                T\n              </div>\n              <span className=\"text-xl font-bold text-blue-400\">\n                {state.tonCoins.toLocaleString()}\n              </span>\n              <span className=\"text-sm text-blue-300\">TON</span>\n            </div>\n          )}\n        </div>\n        <div className=\"flex items-center justify-center gap-4 text-sm\">\n          <div className=\"flex items-center gap-1\">\n            <Zap className=\"w-4 h-4 text-blue-400\" />\n            <span>{state.energy}/{state.maxEnergy}</span>\n          </div>\n          <div className=\"text-purple-300\">\n            Level {state.level}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-1\">\n        <div className=\"flex-1 pb-20\">\n          <TabsContent value=\"tap\" className=\"mt-0\">\n            <TapScreen />\n          </TabsContent>\n          <TabsContent value=\"games\" className=\"mt-0\">\n            <GamesScreen />\n          </TabsContent>\n          <TabsContent value=\"boosts\" className=\"mt-0\">\n            <BoostScreen />\n          </TabsContent>\n          <TabsContent value=\"tasks\" className=\"mt-0\">\n            <TasksScreen />\n          </TabsContent>\n          <TabsContent value=\"friends\" className=\"mt-0\">\n            <FriendsScreen />\n          </TabsContent>\n          <TabsContent value=\"profile\" className=\"mt-0\">\n            <ProfileScreen />\n          </TabsContent>\n        </div>\n\n        {/* Bottom Navigation */}\n        <div className=\"fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-black/20 backdrop-blur-md border-t border-white/10\">\n          <TabsList className=\"w-full h-16 bg-transparent grid grid-cols-6 gap-0\">\n            <TabsTrigger\n              value=\"tap\"\n              className=\"flex-col gap-1 h-full data-[state=active]:bg-white/10 data-[state=active]:text-white\"\n            >\n              <Target className=\"w-4 h-4\" />\n              <span className=\"text-xs\">Tap</span>\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"games\"\n              className=\"flex-col gap-1 h-full data-[state=active]:bg-white/10 data-[state=active]:text-white\"\n            >\n              <Gamepad2 className=\"w-4 h-4\" />\n              <span className=\"text-xs\">Games</span>\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"boosts\"\n              className=\"flex-col gap-1 h-full data-[state=active]:bg-white/10 data-[state=active]:text-white relative\"\n            >\n              <TrendingUp className=\"w-4 h-4\" />\n              <span className=\"text-xs\">Boosts</span>\n              {Object.values(state.boosts).some((boost, index) => {\n                const expiries = [state.boosts.tapPowerBoostExpiry, state.boosts.energyBoostExpiry, state.boosts.xpBoostExpiry, state.boosts.levelBoostExpiry];\n                return Date.now() < expiries[index] && boost > 1;\n              }) && (\n                <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-green-500 rounded-full\"></div>\n              )}\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"tasks\"\n              className=\"flex-col gap-1 h-full data-[state=active]:bg-white/10 data-[state=active]:text-white relative\"\n            >\n              <Target className=\"w-4 h-4\" />\n              <span className=\"text-xs\">Tasks</span>\n              {state.tasks.some(task => task.completed && task.id.includes('daily')) && (\n                <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full\"></div>\n              )}\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"friends\"\n              className=\"flex-col gap-1 h-full data-[state=active]:bg-white/10 data-[state=active]:text-white\"\n            >\n              <Users className=\"w-4 h-4\" />\n              <span className=\"text-xs\">Friends</span>\n            </TabsTrigger>\n            <TabsTrigger\n              value=\"profile\"\n              className=\"flex-col gap-1 h-full data-[state=active]:bg-white/10 data-[state=active]:text-white\"\n            >\n              <User className=\"w-4 h-4\" />\n              <span className=\"text-xs\">Profile</span>\n            </TabsTrigger>\n          </TabsList>\n        </div>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6216, "column": 0}, "map": {"version":3,"sources":["file:///home/project/telegram-tap-game/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { GameProvider } from '@/lib/gameContext';\nimport { TapGame } from '@/components/TapGame';\n\nexport default function Home() {\n  return (\n    <GameProvider>\n      <div className=\"min-h-screen bg-gradient-to-b from-blue-900 via-purple-900 to-indigo-900\">\n        <TapGame />\n      </div>\n    </GameProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACE,mMAAC,6HAAA,CAAA,eAAY;kBACX,cAAA,mMAAC;YAAI,WAAU;sBACb,cAAA,mMAAC,gIAAA,CAAA,UAAO;;;;;;;;;;;;;;;AAIhB;KARwB","debugId":null}}]
}